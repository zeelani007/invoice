{"version":3,"sources":["cart2.js"],"names":["cart","document","querySelector","cartModalOverlay","addEventListener","style","transform","closeBtn","e","target","classList","contains","addToCart","button","getElementsByClassName","i","length","addToCartClicked","event","price","imageSrc","cartItem","addItemToCart","updateCartPrice","innerText","src","cartImage","productRow","createElement","productRows","alert","cartRowItems","removeBtn","removeItem","changeQuantity","quantityInput","input","btnClicked","parentElement","remove","total","value","cartRow","quantityElement","parseFloat","priceElement","replace","purchaseBtn","purchaseBtnClicked","textContent","hasChildNodes","closeCartModal","cartItems","removeChild","firstChild"],"mappings":"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","file":"cart2.min.js","sourcesContent":["// open cart modal\r\nconst cart = document.querySelector('#cart');\r\nconst cartModalOverlay = document.querySelector('.cart-modal-overlay');\r\n\r\ncart.addEventListener('click', () => {\r\n  if (cartModalOverlay.style.transform === 'translateX(-200%)'){\r\n    cartModalOverlay.style.transform = 'translateX(0)';\r\n  } else {\r\n    cartModalOverlay.style.transform = 'translateX(-200%)';\r\n  }\r\n})\r\n// end of open cart modal\r\n\r\n// close cart modal\r\nconst closeBtn = document.querySelector ('#close-btn');\r\n\r\ncloseBtn.addEventListener('click', () => {\r\n  cartModalOverlay.style.transform = 'translateX(-200%)';\r\n});\r\n\r\ncartModalOverlay.addEventListener('click', (e) => {\r\n  if (e.target.classList.contains('cart-modal-overlay')){\r\n    cartModalOverlay.style.transform = 'translateX(-200%)'\r\n  }\r\n})\r\n// end of close cart modal\r\n\r\n// add products to cart\r\nconst addToCart = document.getElementsByClassName('add-to-cart');\r\nconst productRow = document.getElementsByClassName('product-row');\r\n\r\nfor (var i = 0; i < addToCart.length; i++) {\r\n  button = addToCart[i];\r\n  button.addEventListener('click', addToCartClicked)\r\n}\r\n\r\nfunction addToCartClicked (event) {\r\n  button = event.target;\r\n  var cartItem = button.parentElement;\r\n  var price = cartItem.getElementsByClassName('product-price')[0].innerText;\r\n  \r\n  var imageSrc = cartItem.getElementsByClassName('product-image')[0].src;\r\n  addItemToCart (price, imageSrc);\r\n  updateCartPrice()\r\n}\r\n\r\nfunction addItemToCart (price, imageSrc) {\r\n  var productRow = document.createElement('div');\r\n  productRow.classList.add('product-row');\r\n  var productRows = document.getElementsByClassName('product-rows')[0];\r\n  var cartImage = document.getElementsByClassName('cart-image');\r\n  \r\n  for (var i = 0; i < cartImage.length; i++){\r\n    if (cartImage[i].src == imageSrc){\r\n      alert ('This item has already been added to the cart')\r\n      return;\r\n    }\r\n  }\r\n  \r\n  var cartRowItems = `\r\n  <div class=\"product-row\">\r\n        <img class=\"cart-image\" src=\"${imageSrc}\" alt=\"\">\r\n        <span class =\"cart-price\">${price}</span>\r\n        <input class=\"product-quantity\" type=\"number\" value=\"1\">\r\n        <button class=\"remove-btn\">Remove</button>\r\n        </div>\r\n        \r\n      `\r\n  productRow.innerHTML = cartRowItems;\r\n  productRows.append(productRow);\r\n  productRow.getElementsByClassName('remove-btn')[0].addEventListener('click', removeItem)\r\n  productRow.getElementsByClassName('product-quantity')[0].addEventListener('change', changeQuantity)\r\n  updateCartPrice()\r\n}\r\n// end of add products to cart\r\n\r\n// Remove products from cart\r\nconst removeBtn = document.getElementsByClassName('remove-btn');\r\nfor (var i = 0; i < removeBtn.length; i++) {\r\n  button = removeBtn[i]\r\n  button.addEventListener('click', removeItem)\r\n}\r\n\r\nfunction removeItem (event) {\r\n  btnClicked = event.target\r\n  btnClicked.parentElement.parentElement.remove()\r\n  updateCartPrice()\r\n}\r\n\r\n// update quantity input\r\nvar quantityInput = document.getElementsByClassName('product-quantity')[0];\r\n\r\nfor (var i = 0; i < quantityInput; i++){\r\n  input = quantityInput[i]\r\n  input.addEventListener('change', changeQuantity)\r\n}\r\n\r\nfunction changeQuantity(event) {\r\n  var input = event.target\r\n  if (isNaN(input.value) || input.value <= 0){\r\n    input.value = 1\r\n  }\r\n  updateCartPrice()\r\n}\r\n// end of update quantity input\r\n\r\n// update total price\r\nfunction updateCartPrice() {\r\n  var total = 0\r\n  for (var i = 0; i < productRow.length; i += 2) {\r\n    cartRow = productRow[i]\r\n  var priceElement = cartRow.getElementsByClassName('cart-price')[0]\r\n  var quantityElement = cartRow.getElementsByClassName('product-quantity')[0]\r\n  var price = parseFloat(priceElement.innerText.replace('$', ''))\r\n  var quantity = quantityElement.value\r\n  total = total + (price * quantity )\r\n    \r\n  }\r\n  document.getElementsByClassName('total-price')[0].innerText =  '$' + total\r\n\r\ndocument.getElementsByClassName('cart-quantity')[0].textContent = i /= 2\r\n}\r\n// end of update total price\r\n\r\n// purchase items\r\nconst purchaseBtn = document.querySelector('.purchase-btn');\r\n\r\nconst closeCartModal = document.querySelector('.cart-modal');\r\n\r\npurchaseBtn.addEventListener('click', purchaseBtnClicked)\r\n\r\nfunction purchaseBtnClicked () {\r\n  alert ('Thank you for your purchase');\r\n  cartModalOverlay.style.transform= 'translateX(-100%)'\r\n var cartItems = document.getElementsByClassName('product-rows')[0]\r\n while (cartItems.hasChildNodes()) {\r\n   cartItems.removeChild(cartItems.firstChild)\r\n   \r\n }\r\n  updateCartPrice()\r\n}\r\n// end of purchase items\r\n\r\n//alert user if cart is empty \r\n\r\n\r\n\r\n"]}